name: OnnxVision_Mask_RCNN_R_50_FPN
framework:
  name: Onnxruntime
  version: 1.7.1
version: 1.0
description: >
  This model is a real-time neural network for object instance segmentation that detects 80 different classes.
  This model only allows batchsize = 1 currently.
references:
  - https://github.com/onnx/models/tree/master/vision/object_detection_segmentation/mask-rcnn
license: Apache License, Version 2.0
modality: image_instance_segmentation
inputs:
  - type: image
    description: the input image
    parameters:
      element_type: float32
      input_layer: 0
      layout: CHW
      color_mode: BGR
      mean: [102.9801, 115.9465, 122.7717]
      scale: [1, 1, 1]  
outputs:
  - type: boundingboxes
    description: boundingboxes
    parameters:
      element_type: float32
  - type: classes
    description: classes
    parameters:
      element_type: int64
  - type: probabilities
    description: probabilities
    parameters:
      element_type: float32
  - type: masks
    description: masks
    parameters:
      element_type: float32
model:
  is_archive:
    false
  graph_path: https://s3.amazonaws.com/store.carml.org/models/onnxruntime/onnxvision_mask_rcnn_r_50_fpn.onnx
  graph_checksum: ba1088fe5c4a9182075f3ce136037968
  features_path: https://s3.amazonaws.com/store.carml.org/synsets/coco/coco_labels_2014_2017_background.txt
  features_checksum: e7103a997c945e0f87c49a03c9c56a1b
preprocess: |
  import numpy as np
  import cv2
  def preprocess(ctx, data):
    img = cv2.imread(dataset[int(data)])
    img = np.asarray(img, dtype='float32')
    means = np.array([102.9801, 115.9465, 122.7717])
    img -= means
    img = img.transpose([2, 0, 1])
    return img
postprocess: |
  def postprocess(ctx, data):
    print(data)
attributes:
  kind: CNN
  training_dataset: COCO 2017
  manifest_author: Yen-Hsiang Chang
