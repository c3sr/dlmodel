name: SRGAN # name of your model
framework:
  name: PyTorch # framework for the model
  version: 1.8.1 # framework version constraint
version: 1.0 # version information in semantic version format
description: >
  This model is a replication of the model described in the SRGAN publication.
references: # references to papers / websites / etc.. describing the model
  - https://github.com/leftthomas/SRGAN
  - https://arxiv.org/pdf/1609.04802.pdf
# license of the model
license: MIT License
modality: image_enhancement
inputs:
  - type: image
    description: the input image
outputs:
  - type: image
    description: the output image
model: # specifies model graph and weights resources
  is_archive:
    false # if set, then the base_url is a url to an archive
    # the graph_path and weights_path then denote the
    # file names of the graph and weights within the archive
  graph_path: https://s3.amazonaws.com/store.carml.org/models/pytorch/srgan_netG_epoch_4_100.pt
  graph_checksum: 2ea83f6e74420f60902e074fb0e893df
preprocess: |
  from torchvision import transforms
  from PIL import Image
  preprocessor = transforms.Compose([
    transforms.ToTensor(),
  ])
  def preprocess(ctx, data):
    img = Image.open(dataset[int(data)]).convert('RGB')
    return preprocessor(img).numpy()
postprocess: |
  import numpy as np
  def postprocess(ctx, data):
    return np.transpose(data[0], axes=[0, 2, 3, 1]).tolist()
attributes: # extra network attributes
  kind: CNN # the kind of neural network (CNN, RNN, ...)
  training_dataset: VOC
  manifest_author: Yen-Hsiang Chang